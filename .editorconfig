# Remove the line below if you want to inherit .editorconfig settings from higher directories
root = true

########################################
# All file types
[*]
# Indentation and spacing
indent_size = tab
indent_style = tab
tab_width = 4

# New line preferences
end_of_line = crlf
insert_final_newline = false

# Microsoft .NET properties
csharp_style_var_elsewhere = false:suggestion
csharp_style_var_for_built_in_types = false:suggestion
csharp_style_var_when_type_is_apparent = false:suggestion

########################################
# C# files
[*.cs]

#### Core EditorConfig Options ####

# Indentation and spacing
indent_size = tab
indent_style = tab
tab_width = 4

# New line preferences
end_of_line = crlf
insert_final_newline = false

# Microsoft .NET properties
csharp_style_var_elsewhere = false:suggestion
csharp_style_var_for_built_in_types = false:suggestion
csharp_style_var_when_type_is_apparent = false:suggestion

#### .NET Coding Conventions ####

# Organize usings
dotnet_separate_import_directive_groups = false
dotnet_sort_system_directives_first = false
file_header_template = unset

# this. and Me. preferences
dotnet_style_qualification_for_event = false
dotnet_style_qualification_for_field = false
dotnet_style_qualification_for_method = false
dotnet_style_qualification_for_property = false

# Language keywords vs BCL types preferences
dotnet_style_predefined_type_for_locals_parameters_members = true
dotnet_style_predefined_type_for_member_access = true

# Parentheses preferences
dotnet_style_parentheses_in_arithmetic_binary_operators = always_for_clarity
dotnet_style_parentheses_in_other_binary_operators = always_for_clarity
dotnet_style_parentheses_in_other_operators = never_if_unnecessary
dotnet_style_parentheses_in_relational_binary_operators = always_for_clarity

# Modifier preferences
dotnet_style_require_accessibility_modifiers = for_non_interface_members

# Expression-level preferences
dotnet_style_coalesce_expression = true
dotnet_style_collection_initializer = true
dotnet_style_explicit_tuple_names = true
dotnet_style_namespace_match_folder = true
dotnet_style_null_propagation = true
dotnet_style_object_initializer = true
dotnet_style_operator_placement_when_wrapping = beginning_of_line
dotnet_style_prefer_auto_properties = true
dotnet_style_prefer_compound_assignment = true
dotnet_style_prefer_conditional_expression_over_assignment = true
dotnet_style_prefer_conditional_expression_over_return = true
dotnet_style_prefer_inferred_anonymous_type_member_names = true
dotnet_style_prefer_inferred_tuple_names = true
dotnet_style_prefer_is_null_check_over_reference_equality_method = true
dotnet_style_prefer_simplified_boolean_expressions = true
dotnet_style_prefer_simplified_interpolation = true

# Field preferences
dotnet_style_readonly_field = true:silent

# Parameter preferences
dotnet_code_quality_unused_parameters = non_public

# Suppression preferences
dotnet_remove_unnecessary_suppression_exclusions = none

# New line preferences
dotnet_style_allow_multiple_blank_lines_experimental = false
dotnet_style_allow_statement_immediately_after_block_experimental = false:suggestion

#### C# Coding Conventions ####

# var preferences
csharp_style_var_elsewhere = false
csharp_style_var_for_built_in_types = false
csharp_style_var_when_type_is_apparent = false

# Expression-bodied members
csharp_style_expression_bodied_accessors = true
csharp_style_expression_bodied_constructors = false
csharp_style_expression_bodied_indexers = true
csharp_style_expression_bodied_lambdas = true
csharp_style_expression_bodied_local_functions = false
csharp_style_expression_bodied_methods = false
csharp_style_expression_bodied_operators = false
csharp_style_expression_bodied_properties = true

# Pattern matching preferences
csharp_style_pattern_matching_over_as_with_null_check = true
csharp_style_pattern_matching_over_is_with_cast_check = true
csharp_style_prefer_extended_property_pattern = true
csharp_style_prefer_not_pattern = true
csharp_style_prefer_pattern_matching = true
csharp_style_prefer_switch_expression = true

# Null-checking preferences
csharp_style_conditional_delegate_call = true

# Modifier preferences
csharp_prefer_static_local_function = true
csharp_preferred_modifier_order = public, private, protected, internal, static, extern, new, virtual, abstract, sealed, override, readonly, unsafe, volatile, async

# Code-block preferences
csharp_prefer_braces = true:error
csharp_prefer_simple_using_statement = true
csharp_style_namespace_declarations = block_scoped

# Expression-level preferences
csharp_prefer_simple_default_expression = true
csharp_style_deconstructed_variable_declaration = true
csharp_style_implicit_object_creation_when_type_is_apparent = true
csharp_style_inlined_variable_declaration = true
csharp_style_prefer_index_operator = true
csharp_style_prefer_local_over_anonymous_function = true
csharp_style_prefer_null_check_over_type_check = true
csharp_style_prefer_range_operator = true
csharp_style_prefer_tuple_swap = true
csharp_style_throw_expression = true
csharp_style_unused_value_assignment_preference = discard_variable
csharp_style_unused_value_expression_statement_preference = discard_variable

# 'using' directive preferences
csharp_using_directive_placement = outside_namespace

# New line preferences
csharp_style_allow_blank_line_after_colon_in_constructor_initializer_experimental = true
csharp_style_allow_blank_lines_between_consecutive_braces_experimental = false:suggestion
csharp_style_allow_embedded_statements_on_same_line_experimental = false:warning

#### C# Formatting Rules ####

# New line preferences
csharp_new_line_before_catch = true
csharp_new_line_before_else = true
csharp_new_line_before_finally = true
csharp_new_line_before_members_in_anonymous_types = true
csharp_new_line_before_members_in_object_initializers = true
csharp_new_line_before_open_brace = all
csharp_new_line_between_query_expression_clauses = true

# Indentation preferences
csharp_indent_block_contents = true
csharp_indent_braces = false
csharp_indent_case_contents = true
csharp_indent_case_contents_when_block = false
csharp_indent_labels = one_less_than_current
csharp_indent_switch_labels = true

# Space preferences
csharp_space_after_cast = false
csharp_space_after_colon_in_inheritance_clause = true
csharp_space_after_comma = true
csharp_space_after_dot = false
csharp_space_after_keywords_in_control_flow_statements = true
csharp_space_after_semicolon_in_for_statement = true
csharp_space_around_binary_operators = before_and_after
csharp_space_around_declaration_statements = false
csharp_space_before_colon_in_inheritance_clause = true
csharp_space_before_comma = false
csharp_space_before_dot = false
csharp_space_before_open_square_brackets = false
csharp_space_before_semicolon_in_for_statement = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_parentheses = false
csharp_space_between_square_brackets = false

# Wrapping preferences
csharp_preserve_single_line_blocks = true
csharp_preserve_single_line_statements = true

#### Naming styles ####

# Naming rules

dotnet_naming_rule.interface_should_be_begins_with_i.severity = suggestion
dotnet_naming_rule.interface_should_be_begins_with_i.symbols = interface
dotnet_naming_rule.interface_should_be_begins_with_i.style = begins_with_i

dotnet_naming_rule.types_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.types_should_be_pascal_case.symbols = types
dotnet_naming_rule.types_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.non_field_members_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.non_field_members_should_be_pascal_case.symbols = non_field_members
dotnet_naming_rule.non_field_members_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.private_or_internal_field_should_be__camelcase.severity = suggestion
dotnet_naming_rule.private_or_internal_field_should_be__camelcase.symbols = private_or_internal_field
dotnet_naming_rule.private_or_internal_field_should_be__camelcase.style = _camelcase

dotnet_naming_rule.public_or_protected_field_should_be_PascalCase.severity = suggestion
dotnet_naming_rule.public_or_protected_field_should_be_PascalCase.symbols = public_or_protected_field
dotnet_naming_rule.public_or_protected_field_should_be_PascalCase.style = pascal_case

dotnet_naming_rule.public_field_should_be_PascalCase.severity = suggestion
dotnet_naming_rule.public_field_should_be_PascalCase.symbols = public_field
dotnet_naming_rule.public_field_should_be_PascalCase.style = pascal_case

dotnet_naming_rule.private_static_field_should_be_s_camelCase.severity = suggestion
dotnet_naming_rule.private_static_field_should_be_s_camelCase.symbols = private_static_field
dotnet_naming_rule.private_static_field_should_be_s_camelCase.style = s_camel_case



# Constants are UPPERCASE
dotnet_naming_rule.constants_should_be_upper_case.severity = suggestion
dotnet_naming_rule.constants_should_be_upper_case.symbols = constants
dotnet_naming_rule.constants_should_be_upper_case.style = constant_style
dotnet_naming_symbols.constants.applicable_kinds = field, local
dotnet_naming_symbols.constants.required_modifiers = const
dotnet_naming_style.constant_style.capitalization = all_upper


#dotnet_naming_rule.local_variable_should_be_upper_case.severity = suggestion
#dotnet_naming_rule.local_variable_should_be_upper_case.symbols = local_variable
#dotnet_naming_rule.local_variable_should_be_upper_case.style = constant_style


# Symbol specifications
dotnet_naming_symbols.interface.applicable_kinds = interface
dotnet_naming_symbols.interface.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.interface.required_modifiers =

dotnet_naming_symbols.private_or_internal_field.applicable_kinds = field
dotnet_naming_symbols.private_or_internal_field.applicable_accessibilities = internal, private, private_protected
dotnet_naming_symbols.private_or_internal_field.required_modifiers =

dotnet_naming_symbols.public_field.applicable_kinds = field
dotnet_naming_symbols.public_field.applicable_accessibilities = public, protected, protected_internal
dotnet_naming_symbols.public_field.required_modifiers = 

dotnet_naming_symbols.types.applicable_kinds = class, struct, interface, enum
dotnet_naming_symbols.types.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.types.required_modifiers =

dotnet_naming_symbols.non_field_members.applicable_kinds = property, event, method
dotnet_naming_symbols.non_field_members.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected
dotnet_naming_symbols.non_field_members.required_modifiers =

dotnet_naming_symbols.public_or_protected_field.applicable_kinds = field
dotnet_naming_symbols.public_or_protected_field.applicable_accessibilities = public, protected, protected_internal
dotnet_naming_symbols.public_or_protected_field.required_modifiers =

dotnet_naming_symbols.private_static_field.applicable_kinds = field
dotnet_naming_symbols.private_static_field.applicable_accessibilities = private, private_protected
dotnet_naming_symbols.private_static_field.required_modifiers = static


# Naming styles

dotnet_naming_style.pascal_case.required_prefix =
dotnet_naming_style.pascal_case.required_suffix =
dotnet_naming_style.pascal_case.word_separator =
dotnet_naming_style.pascal_case.capitalization = pascal_case

dotnet_naming_style.begins_with_i.required_prefix = I
dotnet_naming_style.begins_with_i.required_suffix =
dotnet_naming_style.begins_with_i.word_separator =
dotnet_naming_style.begins_with_i.capitalization = pascal_case

dotnet_naming_style._camelcase.required_prefix = _
dotnet_naming_style._camelcase.required_suffix =
dotnet_naming_style._camelcase.word_separator =
dotnet_naming_style._camelcase.capitalization = camel_case

dotnet_naming_style.s_camel_case.capitalization = camel_case
dotnet_naming_style.s_camel_case.required_prefix = s_
dotnet_naming_style.s_camel_case.required_suffix =

# Analyzers
# StyleCop.Analyzers
dotnet_diagnostic.SA1000.severity = none # <!-- Keywords must be spaced correctly. -->
dotnet_diagnostic.SA1005.severity = none # <!-- Single line comments must begin with single space. -->
dotnet_diagnostic.SA1027.severity = none # <!-- Use tabs correctly. -->
dotnet_diagnostic.SA1028.severity = none # <!-- Code must not contain trailing whitespace. -->
#
dotnet_diagnostic.SA1101.severity = none #  <!-- Prefix local calls with 'this.' -->
dotnet_diagnostic.SA1108.severity = none #  <!-- Block statements must not contain embedded comments.-->

dotnet_diagnostic.SA1116.severity = none #  <!-- Split parameters must start on line after declaration. -->

dotnet_diagnostic.SA1119.severity = none # <!-- Statement must not use unnecessary parenthesis. -->
#dotnet_diagnostic.SA1129.severity = none # <!-- Do not use default value type constructor. -->
dotnet_diagnostic.SA1131.severity = none # <!-- Use Readable conditions-->
dotnet_diagnostic.SA1133.severity = none # <!-- Do not combine attributes. -->
dotnet_diagnostic.SA1134.severity = none # <!-- Attributes must not share line. -->
#
dotnet_diagnostic.SA1200.severity = none # <!-- Using directives must be placed correctly. -->
dotnet_diagnostic.SA1201.severity = none # <!-- Elements must appear in the correct order. -->
dotnet_diagnostic.SA1202.severity = none # <!-- Elements must be ordered by access.-->
dotnet_diagnostic.SA1203.severity = none # <!-- Constants must appear before fields. -->
dotnet_diagnostic.SA1208.severity = none # <!-- System using directives must be placed before other using directives. -->
dotnet_diagnostic.SA1210.severity = none # <!-- Using directives must be ordered alphabetically by namespace. -->
dotnet_diagnostic.SA1214.severity = none # <!-- Readonly elements must appear before non readonly elements. -->
dotnet_diagnostic.SA1127.severity = none # <!-- Generic type constraints must be on own line. -->
dotnet_diagnostic.SA1128.severity = none # <!-- Constructor initializer must be on own line. -->
#
dotnet_diagnostic.SA1304.severity = none # <!-- Non private readonly fields must begin with upper case letter. -->
dotnet_diagnostic.SA1306.severity = none # <!-- Field names must begin with lower case letter. -->
dotnet_diagnostic.SA1307.severity = none # <!-- Accessible fields must begin with upper case letter. -->
dotnet_diagnostic.SA1308.severity = none # <!-- Variable names must not be prefixed. -->
dotnet_diagnostic.SA1309.severity = none # <!-- Field names must not begin with an underscore. -->
dotnet_diagnostic.SA1310.severity = none # <!-- Field names must not contain underscores. -->
dotnet_diagnostic.SA1311.severity = none # <!-- Static readonly fields must begin with an uppercase letter. -->
#
dotnet_diagnostic.SA1401.severity = none # <!-- Fields must be private. -->
dotnet_diagnostic.SA1402.severity = none # <!-- File may only contain a single type. -->
dotnet_diagnostic.SA1407.severity = none # <!-- Arithmetic expressions must declare precedence. -->
dotnet_diagnostic.SA1413.severity = none # <!-- Use trailing commas in multi-line initializers. -->
#
dotnet_diagnostic.SA1512.severity = none # <!-- Single line comments must not be followed by a blank line. -->
dotnet_diagnostic.SA1515.severity = none # <!-- Single line comment must be preceded by a blank line. -->
dotnet_diagnostic.SA1516.severity = none # <!-- Elements must be separated by a blank line. -->
#
dotnet_diagnostic.SA1600.severity = none # <!-- Elements must be documented. -->
dotnet_diagnostic.SA1602.severity = none # <!-- Enumeration items must be documented. -->
dotnet_diagnostic.SA1614.severity = none # <!-- Element parameter documentation must have text. -->
dotnet_diagnostic.SA1616.severity = none # <!-- Element return value documentation must have text. -->
dotnet_diagnostic.SA1622.severity = none # <!-- Generic type parameter documentation must have text. -->
dotnet_diagnostic.SA1623.severity = none # <!-- Property summary documentation must match accessors. -->
dotnet_diagnostic.SA1649.severity = none # <!-- File name must match type name. -->

dotnet_diagnostic.SX1309.severity = none # <!-- File name must match type name. -->
dotnet_diagnostic.SX1309S.severity = none # <!-- A static field name does not begin with an underscore. -->


